Loops: Loops are used to iterate certain statements again and again until the given condition is false. Each execution is called iteration.
There are two kinds of loops :
  i. Entry control loop
  ii. Exit control loop
  i. Entry control loops: These loops are used to check the condition before the entering the body of loop
  eg: while, for
  syntax for while: 
         initialization;
         while(condition){
            //body
         updation;
         }
         /* use the while and print 1 to 10 values */
let i = 1;
while (i <= 10)
{
    console.log(i);
    i++;
} 

 ii. Exit control loop:
 These loops are used to verify the condition after executing the body and In case of true, it re-executes else it will stop
 eg: do while
 syntax of do while:
   initialization
   do{
            //body
            updation;
   }while(condition);


iii. for: for is used to iterate the statements as entry control loop but it contains condition,updation and initialization in the same line.
for(initialization;condition;updation){
    //body
}
//print 20 to 1 numbers in reverse order using for
for (let i = 20; i >= 1; i--)
{
    console.log(i)
}

for have many more variations in javascript such as
  i. for...of
  ii. for...in

let arr= [5.4,6,8,1];
for(let i=0;i<arr.length;i++){
    console.log(arr[i])
}

let arr = [5,4, 6, 8, 1]
for (let i = 0; i < arr.length; i++) {
	console.log(arr[i])
}
for (let i of arr)
{
    console.log(i);
}
for (let i in arr) {
	console.log(arr[i])
}


Nested loops: loop inside a loop
